// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: eganow/api/customer/onboarding_entity.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomerAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerGuid               string `protobuf:"bytes,1,opt,name=CustomerGuid,proto3" json:"CustomerGuid,omitempty"`
	CustomerId                 string `protobuf:"bytes,2,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	MobileNumber               string `protobuf:"bytes,3,opt,name=MobileNumber,proto3" json:"MobileNumber,omitempty"`
	EmailAddress               string `protobuf:"bytes,4,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	PersonalBusinessGroup      string `protobuf:"bytes,5,opt,name=PersonalBusinessGroup,proto3" json:"PersonalBusinessGroup,omitempty"`
	PersonalBusinessGroupValue int32  `protobuf:"varint,6,opt,name=PersonalBusinessGroupValue,proto3" json:"PersonalBusinessGroupValue,omitempty"`
	FirstName                  string `protobuf:"bytes,7,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName                   string `protobuf:"bytes,8,opt,name=LastName,proto3" json:"LastName,omitempty"`
	BusinessName               string `protobuf:"bytes,9,opt,name=BusinessName,proto3" json:"BusinessName,omitempty"`
	LanguageId                 string `protobuf:"bytes,10,opt,name=LanguageId,proto3" json:"LanguageId,omitempty"`
	CustomerPINHash            string `protobuf:"bytes,11,opt,name=CustomerPINHash,proto3" json:"CustomerPINHash,omitempty"`
	UserJwtToken               string `protobuf:"bytes,12,opt,name=UserJwtToken,proto3" json:"UserJwtToken,omitempty"`
	CountryCode                string `protobuf:"bytes,13,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	CountryDialCode            int32  `protobuf:"varint,14,opt,name=CountryDialCode,proto3" json:"CountryDialCode,omitempty"`
	IsSuccess                  bool   `protobuf:"varint,15,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	Message                    string `protobuf:"bytes,16,opt,name=Message,proto3" json:"Message,omitempty"`
	PasswordExistValue         string `protobuf:"bytes,17,opt,name=PasswordExistValue,proto3" json:"PasswordExistValue,omitempty"`
	RegisterModeMobileWebUssd  string `protobuf:"bytes,18,opt,name=RegisterModeMobileWebUssd,proto3" json:"RegisterModeMobileWebUssd,omitempty"`
	IdCardStatus               string `protobuf:"bytes,19,opt,name=IdCardStatus,proto3" json:"IdCardStatus,omitempty"`
	OperatingCountryYesNo      string `protobuf:"bytes,20,opt,name=OperatingCountryYesNo,proto3" json:"OperatingCountryYesNo,omitempty"`
	CustomerProfilePicImageUrl string `protobuf:"bytes,21,opt,name=CustomerProfilePicImageUrl,proto3" json:"CustomerProfilePicImageUrl,omitempty"`
	MobileNumberOrEmailExist   int32  `protobuf:"varint,22,opt,name=MobileNumberOrEmailExist,proto3" json:"MobileNumberOrEmailExist,omitempty"`
	JwtNoOfMinutes             int32  `protobuf:"varint,23,opt,name=JwtNoOfMinutes,proto3" json:"JwtNoOfMinutes,omitempty"`
	ApiVersionNo               int32  `protobuf:"varint,24,opt,name=ApiVersionNo,proto3" json:"ApiVersionNo,omitempty"`
	AppversionNo               string `protobuf:"bytes,25,opt,name=AppversionNo,proto3" json:"AppversionNo,omitempty"`
	AppUpdateRequirementStatus string `protobuf:"bytes,26,opt,name=AppUpdateRequirementStatus,proto3" json:"AppUpdateRequirementStatus,omitempty"`
	CustomerStatus             string `protobuf:"bytes,27,opt,name=CustomerStatus,proto3" json:"CustomerStatus,omitempty"`
}

func (x *CustomerAccount) Reset() {
	*x = CustomerAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eganow_api_customer_onboarding_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAccount) ProtoMessage() {}

func (x *CustomerAccount) ProtoReflect() protoreflect.Message {
	mi := &file_eganow_api_customer_onboarding_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAccount.ProtoReflect.Descriptor instead.
func (*CustomerAccount) Descriptor() ([]byte, []int) {
	return file_eganow_api_customer_onboarding_entity_proto_rawDescGZIP(), []int{0}
}

func (x *CustomerAccount) GetCustomerGuid() string {
	if x != nil {
		return x.CustomerGuid
	}
	return ""
}

func (x *CustomerAccount) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CustomerAccount) GetMobileNumber() string {
	if x != nil {
		return x.MobileNumber
	}
	return ""
}

func (x *CustomerAccount) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *CustomerAccount) GetPersonalBusinessGroup() string {
	if x != nil {
		return x.PersonalBusinessGroup
	}
	return ""
}

func (x *CustomerAccount) GetPersonalBusinessGroupValue() int32 {
	if x != nil {
		return x.PersonalBusinessGroupValue
	}
	return 0
}

func (x *CustomerAccount) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CustomerAccount) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CustomerAccount) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *CustomerAccount) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

func (x *CustomerAccount) GetCustomerPINHash() string {
	if x != nil {
		return x.CustomerPINHash
	}
	return ""
}

func (x *CustomerAccount) GetUserJwtToken() string {
	if x != nil {
		return x.UserJwtToken
	}
	return ""
}

func (x *CustomerAccount) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CustomerAccount) GetCountryDialCode() int32 {
	if x != nil {
		return x.CountryDialCode
	}
	return 0
}

func (x *CustomerAccount) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CustomerAccount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerAccount) GetPasswordExistValue() string {
	if x != nil {
		return x.PasswordExistValue
	}
	return ""
}

func (x *CustomerAccount) GetRegisterModeMobileWebUssd() string {
	if x != nil {
		return x.RegisterModeMobileWebUssd
	}
	return ""
}

func (x *CustomerAccount) GetIdCardStatus() string {
	if x != nil {
		return x.IdCardStatus
	}
	return ""
}

func (x *CustomerAccount) GetOperatingCountryYesNo() string {
	if x != nil {
		return x.OperatingCountryYesNo
	}
	return ""
}

func (x *CustomerAccount) GetCustomerProfilePicImageUrl() string {
	if x != nil {
		return x.CustomerProfilePicImageUrl
	}
	return ""
}

func (x *CustomerAccount) GetMobileNumberOrEmailExist() int32 {
	if x != nil {
		return x.MobileNumberOrEmailExist
	}
	return 0
}

func (x *CustomerAccount) GetJwtNoOfMinutes() int32 {
	if x != nil {
		return x.JwtNoOfMinutes
	}
	return 0
}

func (x *CustomerAccount) GetApiVersionNo() int32 {
	if x != nil {
		return x.ApiVersionNo
	}
	return 0
}

func (x *CustomerAccount) GetAppversionNo() string {
	if x != nil {
		return x.AppversionNo
	}
	return ""
}

func (x *CustomerAccount) GetAppUpdateRequirementStatus() string {
	if x != nil {
		return x.AppUpdateRequirementStatus
	}
	return ""
}

func (x *CustomerAccount) GetCustomerStatus() string {
	if x != nil {
		return x.CustomerStatus
	}
	return ""
}

var File_eganow_api_customer_onboarding_entity_proto protoreflect.FileDescriptor

var file_eganow_api_customer_onboarding_entity_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x65, 0x67, 0x61, 0x6e, 0x6f, 0x77, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x65,
	0x67, 0x61, 0x6e, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x22, 0xff, 0x08, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x50, 0x49, 0x4e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x49, 0x4e, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x77, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x44, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x45, 0x78, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x57, 0x65,
	0x62, 0x55, 0x73, 0x73, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x57,
	0x65, 0x62, 0x55, 0x73, 0x73, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x12, 0x3e, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x3a, 0x0a, 0x18, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x4a, 0x77, 0x74, 0x4e, 0x6f, 0x4f, 0x66, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4a, 0x77, 0x74, 0x4e, 0x6f, 0x4f, 0x66, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x41, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x41, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x3e, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x67, 0x61, 0x6e, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eganow_api_customer_onboarding_entity_proto_rawDescOnce sync.Once
	file_eganow_api_customer_onboarding_entity_proto_rawDescData = file_eganow_api_customer_onboarding_entity_proto_rawDesc
)

func file_eganow_api_customer_onboarding_entity_proto_rawDescGZIP() []byte {
	file_eganow_api_customer_onboarding_entity_proto_rawDescOnce.Do(func() {
		file_eganow_api_customer_onboarding_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_eganow_api_customer_onboarding_entity_proto_rawDescData)
	})
	return file_eganow_api_customer_onboarding_entity_proto_rawDescData
}

var file_eganow_api_customer_onboarding_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eganow_api_customer_onboarding_entity_proto_goTypes = []interface{}{
	(*CustomerAccount)(nil), // 0: eganow.api.customer.CustomerAccount
}
var file_eganow_api_customer_onboarding_entity_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eganow_api_customer_onboarding_entity_proto_init() }
func file_eganow_api_customer_onboarding_entity_proto_init() {
	if File_eganow_api_customer_onboarding_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eganow_api_customer_onboarding_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eganow_api_customer_onboarding_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eganow_api_customer_onboarding_entity_proto_goTypes,
		DependencyIndexes: file_eganow_api_customer_onboarding_entity_proto_depIdxs,
		MessageInfos:      file_eganow_api_customer_onboarding_entity_proto_msgTypes,
	}.Build()
	File_eganow_api_customer_onboarding_entity_proto = out.File
	file_eganow_api_customer_onboarding_entity_proto_rawDesc = nil
	file_eganow_api_customer_onboarding_entity_proto_goTypes = nil
	file_eganow_api_customer_onboarding_entity_proto_depIdxs = nil
}
