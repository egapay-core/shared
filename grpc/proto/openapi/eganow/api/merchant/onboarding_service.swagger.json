{
  "swagger": "2.0",
  "info": {
    "title": "eganow/api/merchant/onboarding_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MerchantOnboardingSvc"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/merchants/check-account": {
      "post": {
        "summary": "CheckIfMerchantAccountExists is a remote procedure call (RPC) that checks if a merchant account exists.\nIt takes a CheckMerchantAccountRequest message as input and returns a MerchantStringValue message.\nThe CheckMerchantAccountRequest message should contain the necessary information to check the existence of a merchant account.\nThe MerchantStringValue message will contain the result of the check.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/check-account\" endpoint.\nThe body of the HTTP request should contain the CheckMerchantAccountRequest message.",
        "operationId": "MerchantOnboardingSvc_CheckIfMerchantAccountExists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantCheckMerchantAccountRequest"
            }
          }
        ],
        "tags": [
          "MerchantOnboardingSvc"
        ]
      }
    },
    "/api/v1/merchants/login": {
      "post": {
        "summary": "LoginMerchant is a remote procedure call (RPC) that logs in a merchant.\nIt takes a LoginMerchantRequest message as input and returns an AuthMerchantResponse message.\nThe LoginMerchantRequest message should contain the necessary information to log in a merchant.\nThe AuthMerchantResponse message will contain the authentication details for the logged in merchant.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/login\" endpoint.\nThe body of the HTTP request should contain the LoginMerchantRequest message.",
        "operationId": "MerchantOnboardingSvc_LoginMerchant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantAuthMerchantResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantLoginMerchantRequest"
            }
          }
        ],
        "tags": [
          "MerchantOnboardingSvc"
        ]
      }
    },
    "/api/v1/merchants/register": {
      "post": {
        "summary": "CreateMerchantAccount is a remote procedure call (RPC) that creates a new merchant account.\nIt takes a CreateMerchantRequest message as input and returns an AuthMerchantResponse message.\nThe CreateMerchantRequest message should contain the necessary information to create a new merchant account.\nThe AuthMerchantResponse message will contain the authentication details for the newly created merchant account.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/register\" endpoint.\nThe body of the HTTP request should contain the CreateMerchantRequest message.",
        "operationId": "MerchantOnboardingSvc_CreateMerchantAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantAuthMerchantResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantCreateMerchantRequest"
            }
          }
        ],
        "tags": [
          "MerchantOnboardingSvc"
        ]
      }
    },
    "/api/v1/merchants/request-password-reset": {
      "post": {
        "summary": "RequestPasswordReset is a remote procedure call (RPC) that requests a password reset for a merchant.\nIt takes a MerchantStringValue message as input and returns a MerchantStringValue message.\nThe MerchantStringValue message should contain the necessary information to request a password reset for a merchant.\nThe returned MerchantStringValue message will contain the result of the password reset request.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/request-password-reset\" endpoint.\nThe body of the HTTP request should contain the MerchantStringValue message.",
        "operationId": "MerchantOnboardingSvc_RequestPasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The JSON representation for `StringValue` is JSON string.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          }
        ],
        "tags": [
          "MerchantOnboardingSvc"
        ]
      }
    },
    "/api/v1/merchants/reset-password": {
      "post": {
        "summary": "ResetPassword is a remote procedure call (RPC) that resets a merchant's password.\nIt takes a ResetPasswordRequest message as input and returns an AuthMerchantResponse message.\nThe ResetPasswordRequest message should contain the necessary information to reset a merchant's password.\nThe AuthMerchantResponse message will contain the authentication details for the merchant after the password reset.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/reset-password\" endpoint.\nThe body of the HTTP request should contain the ResetPasswordRequest message.",
        "operationId": "MerchantOnboardingSvc_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantAuthMerchantResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "MerchantOnboardingSvc"
        ]
      }
    }
  },
  "definitions": {
    "CreateMerchantRequestBusinessInformation": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string"
        },
        "tradingName": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string",
          "title": "MSISDN format (+233244123456)"
        }
      },
      "title": "The merchant's business information",
      "required": [
        "businessName",
        "tradingName",
        "mobileNumber"
      ]
    },
    "CreateMerchantRequestPersonalInformation": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string",
          "title": "MSISDN format (+233244123456)"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      },
      "title": "The merchant's personal information",
      "required": [
        "email",
        "mobileNumber",
        "firstName",
        "lastName"
      ]
    },
    "merchantAuthMerchantResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "JWT token for user authorization (for now)"
        },
        "fullName": {
          "type": "string",
          "title": "full name of the merchant"
        },
        "firstName": {
          "type": "string",
          "title": "first name of the merchant"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the merchant"
        },
        "companyName": {
          "type": "string",
          "title": "company name of the merchant"
        },
        "profilePicture": {
          "type": "string",
          "title": "URL to the profile picture of the merchant (if any)"
        },
        "email": {
          "type": "string",
          "title": "email of the merchant"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the merchant"
        },
        "status": {
          "$ref": "#/definitions/merchantCustomerStatus",
          "title": "status of the merchant"
        }
      }
    },
    "merchantCheckMerchantAccountRequest": {
      "type": "object",
      "properties": {
        "merchantEmail": {
          "type": "string"
        },
        "merchantMobileNumber": {
          "type": "string",
          "title": "MSISDN format (+233244123456)"
        }
      },
      "required": [
        "merchantEmail",
        "merchantMobileNumber"
      ]
    },
    "merchantCreateMerchantRequest": {
      "type": "object",
      "properties": {
        "personalInformation": {
          "$ref": "#/definitions/CreateMerchantRequestPersonalInformation"
        },
        "businessInformation": {
          "$ref": "#/definitions/CreateMerchantRequestBusinessInformation"
        },
        "password": {
          "type": "string",
          "title": "minimum 8 characters"
        },
        "otpValue": {
          "type": "string",
          "title": "the already verified OTP value"
        }
      },
      "required": [
        "personalInformation",
        "businessInformation",
        "password",
        "otpValue"
      ]
    },
    "merchantCustomerStatus": {
      "type": "string",
      "enum": [
        "CUSTOMER_STATUS_UNKNOWN",
        "CUSTOMER_STATUS_ACTIVE",
        "CUSTOMER_STATUS_PENDING"
      ],
      "default": "CUSTOMER_STATUS_UNKNOWN"
    },
    "merchantLoginMerchantRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "merchantMerchantStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The string value."
        }
      },
      "description": "The JSON representation for `StringValue` is JSON string."
    },
    "merchantResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string",
          "title": "minimum 8 characters"
        }
      },
      "required": [
        "email",
        "newPassword"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
