{
  "swagger": "2.0",
  "info": {
    "title": "eganow/api/merchant/account_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MerchantAccountSvc"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/merchants/accounts/contact-info": {
      "get": {
        "summary": "GetBusinessContactInfo is a remote procedure call (RPC) that retrieves a merchant's business information.\nThe returned BusinessInfoResponse message will contain the business information.",
        "description": "This RPC is accessible via a HTTP GET request to the \"/api/v1/merchants/accounts/info/{value}\" endpoint.\nThe {value} in the URL should be replaced with the actual value from the MerchantStringValue message.",
        "operationId": "MerchantAccountSvc_GetBusinessContactInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantBusinessContactInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "put": {
        "summary": "UpdateBusinessContactInfo is a remote procedure call (RPC) that updates a merchant's business information.\nIt takes an UpdateBusinessInfoRequest message as input and returns a MerchantStringValue message.\nThe UpdateBusinessInfoRequest message should contain the necessary information to update a merchant's business information.\nThe MerchantStringValue message will contain the result of the update operation.",
        "description": "This RPC is accessible via a HTTP PUT request to the \"/api/v1/merchants/accounts/info\" endpoint.\nThe body of the HTTP request should contain the UpdateBusinessInfoRequest message.",
        "operationId": "MerchantAccountSvc_UpdateBusinessContactInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantUpdateBusinessContactInfoRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/contact-person": {
      "get": {
        "summary": "ListBusinessContactPersons is a remote procedure call (RPC) that retrieves a list of contact persons for a merchant's business.\nIt takes a MerchantEmpty message as input and returns a BusinessContactListResponse message.\nThe returned BusinessContactListResponse message will contain the list of contact persons.",
        "description": "This RPC is accessible via a HTTP GET request to the \"/api/v1/merchants/accounts/contact-person\" endpoint.\nThe {value} in the URL should be replaced with the actual value from the MerchantStringValue message.",
        "operationId": "MerchantAccountSvc_ListBusinessContactPersons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantBusinessContactListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "post": {
        "summary": "AddBusinessContactPerson is a remote procedure call (RPC) that adds a contact person to a merchant's business.\nIt takes an AddBusinessContactRequest message as input and returns a MerchantStringValue message.\nThe AddBusinessContactRequest message should contain the necessary information to add a contact person to a merchant's business.\nThe MerchantStringValue message will contain the result of the add operation.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/accounts/contact-person\" endpoint.\nThe body of the HTTP request should contain the AddBusinessContactPersonRequest message.",
        "operationId": "MerchantAccountSvc_AddBusinessContactPerson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantAddBusinessContactPersonRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "put": {
        "summary": "UpdateBusinessContactPerson is a remote procedure call (RPC) that updates a contact person's information in a merchant's business.\nIt takes an UpdateBusinessContactRequest message as input and returns a MerchantStringValue message.\nThe UpdateBusinessContactRequest message should contain the necessary information to update a contact person's information in a merchant's business.\nThe MerchantStringValue message will contain the result of the update operation.",
        "description": "This RPC is accessible via a HTTP PUT request to the \"/api/v1/merchants/accounts/contact-person\" endpoint.\nThe body of the HTTP request should contain the UpdateBusinessContactPersonRequest message.",
        "operationId": "MerchantAccountSvc_UpdateBusinessContactPerson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantUpdateBusinessContactPersonRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/contact-person/{value}": {
      "delete": {
        "summary": "DeleteBusinessContactPerson is a remote procedure call (RPC) that deletes a contact person from a merchant's business.\nThe returned MerchantStringValue message will contain the result of the delete operation.",
        "description": "This RPC is accessible via a HTTP DELETE request to the \"/api/v1/merchants/accounts/contact-person\" endpoint.\nThe body of the HTTP request should contain the MerchantStringValue message.",
        "operationId": "MerchantAccountSvc_DeleteBusinessContactPerson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The string value.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/director-shareholder": {
      "get": {
        "summary": "ListDirectorShareholders is a remote procedure call (RPC) that retrieves a list of directors or shareholders from a merchant's business.\nIt takes a MerchantEmpty message as input and returns a DirectorShareholderListResponse message.\nThe DirectorShareholderListResponse message will contain the list of directors or shareholders.",
        "description": "This RPC is accessible via a HTTP GET request to the \"/api/v1/merchants/accounts/director-shareholder\" endpoint.",
        "operationId": "MerchantAccountSvc_ListDirectorShareholders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantDirectorShareholderListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "post": {
        "summary": "AddDirectorShareholder is a remote procedure call (RPC) that adds a director or shareholder to a merchant's business.\nIt takes an AddDirectorShareholderRequest message as input and returns a MerchantStringValue message.\nThe AddDirectorShareholderRequest message should contain the necessary information to add a director or shareholder to a merchant's business.\nThe MerchantStringValue message will contain the result of the add operation.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/accounts/director-shareholder\" endpoint.\nThe body of the HTTP request should contain the AddDirectorShareholderRequest message.",
        "operationId": "MerchantAccountSvc_AddDirectorShareholder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantAddDirectorShareholderRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "put": {
        "summary": "UpdateDirectorShareholder is a remote procedure call (RPC) that updates a director or shareholder in a merchant's business.\nIt takes an UpdateDirectorShareholderRequest message as input and returns a MerchantStringValue message.\nThe UpdateDirectorShareholderRequest message should contain the necessary information to update a director or shareholder in a merchant's business.\nThe MerchantStringValue message will contain the result of the update operation.",
        "description": "This RPC is accessible via a HTTP PUT request to the \"/api/v1/merchants/accounts/director-shareholder\" endpoint.\nThe body of the HTTP request should contain the UpdateDirectorShareholderRequest message.",
        "operationId": "MerchantAccountSvc_UpdateDirectorShareholder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantUpdateDirectorShareholderRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/director-shareholder/{value}": {
      "delete": {
        "summary": "DeleteDirectorShareholder is a remote procedure call (RPC) that deletes a director or shareholder from a merchant's business.\nIt takes a MerchantStringValue message as input and returns a MerchantStringValue message.\nThe MerchantStringValue message should contain the necessary information to delete a director or shareholder from a merchant's business.\nThe returned MerchantStringValue message will contain the result of the delete operation.",
        "description": "This RPC is accessible via a HTTP DELETE request to the \"/api/v1/merchants/accounts/director-shareholder/{value}\" endpoint.\nThe {value} in the URL should be replaced with the actual value from the MerchantStringValue message.",
        "operationId": "MerchantAccountSvc_DeleteDirectorShareholder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The string value.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/documents": {
      "get": {
        "summary": "ListBusinessDocuments is a remote procedure call (RPC) that retrieves a list of business documents from a merchant's account.\nIt takes a MerchantEmpty message as input and returns a BusinessDocumentListResponse message.\nThe BusinessDocumentListResponse message will contain the list of business documents.",
        "description": "This RPC is accessible via a HTTP GET request to the \"/api/v1/merchants/accounts/documents\" endpoint.",
        "operationId": "MerchantAccountSvc_ListBusinessDocuments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantBusinessDocumentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "post": {
        "summary": "AddBusinessDocument is a remote procedure call (RPC) that adds a business document to a merchant's account.\nIt takes an AddBusinessDocumentRequest message as input and returns a MerchantStringValue message.\nThe AddBusinessDocumentRequest message should contain the necessary information to add a business document to a merchant's account.\nThe MerchantStringValue message will contain the result of the add operation.",
        "description": "This RPC is accessible via a HTTP POST request to the \"/api/v1/merchants/accounts/documents\" endpoint.\nThe body of the HTTP request should contain the AddBusinessDocumentRequest message.",
        "operationId": "MerchantAccountSvc_AddBusinessDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantAddBusinessDocumentRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "put": {
        "summary": "UpdateBusinessDocument is a remote procedure call (RPC) that updates a business document in a merchant's account.\nIt takes an UpdateBusinessDocumentRequest message as input and returns a MerchantStringValue message.\nThe UpdateBusinessDocumentRequest message should contain the necessary information to update a business document in a merchant's account.\nThe MerchantStringValue message will contain the result of the update operation.",
        "description": "This RPC is accessible via a HTTP PUT request to the \"/api/v1/merchants/accounts/documents\" endpoint.\nThe body of the HTTP request should contain the UpdateBusinessDocumentRequest message.",
        "operationId": "MerchantAccountSvc_UpdateBusinessDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantUpdateBusinessDocumentRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/documents/{value}": {
      "delete": {
        "summary": "DeleteBusinessDocument is a remote procedure call (RPC) that deletes a business document from a merchant's account.\nIt takes a MerchantIntValue message as input and returns a MerchantStringValue message.\nThe MerchantIntValue message should contain the necessary information to delete a business document from a merchant's account.\nThe returned MerchantStringValue message will contain the result of the delete operation.",
        "description": "This RPC is accessible via a HTTP DELETE request to the \"/api/v1/merchants/accounts/documents/{value}\" endpoint.\nThe {value} in the URL should be replaced with the actual value from the MerchantIntValue message.",
        "operationId": "MerchantAccountSvc_DeleteBusinessDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "The int value.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    },
    "/api/v1/merchants/accounts/info": {
      "get": {
        "summary": "GetBusinessInfo is a remote procedure call (RPC) that retrieves business information for a merchant.\nIt takes a MerchantEmpty message as input and returns a BusinessInfoResponse message.\nThe BusinessInfoResponse message will contain the business information of the merchant.",
        "description": "This RPC is accessible via a HTTP GET request to the \"/api/v1/merchants/accounts/info\" endpoint.",
        "operationId": "MerchantAccountSvc_GetBusinessInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantBusinessInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MerchantAccountSvc"
        ]
      },
      "put": {
        "summary": "UpdateBusinessInfo is a remote procedure call (RPC) that updates business information for a merchant.\nIt takes an UpdateBusinessInfoRequest message as input and returns a MerchantStringValue message.\nThe UpdateBusinessInfoRequest message should contain the necessary information to update a business for a merchant.\nThe MerchantStringValue message will contain the result of the update operation.",
        "description": "This RPC is accessible via a HTTP PUT request to the \"/api/v1/merchants/accounts/info\" endpoint.\nThe body of the HTTP request should contain the UpdateBusinessInfoRequest message.",
        "operationId": "MerchantAccountSvc_UpdateBusinessInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/merchantMerchantStringValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantUpdateBusinessInfoRequest"
            }
          }
        ],
        "tags": [
          "MerchantAccountSvc"
        ]
      }
    }
  },
  "definitions": {
    "DirectorShareholderPayloadDirectorShareholderIDInfoPayload": {
      "type": "object",
      "properties": {
        "idNumber": {
          "type": "string",
          "title": "ID number"
        },
        "idExpiryDate": {
          "type": "string",
          "title": "ID expiry date (YYYY-MM-DD)"
        },
        "placeOfIssue": {
          "type": "string",
          "title": "place of issue"
        },
        "idType": {
          "$ref": "#/definitions/merchantCustomerIDTypes",
          "title": "type of ID"
        },
        "idFrontImage": {
          "type": "string",
          "title": "url of the ID front image"
        },
        "idBackImage": {
          "type": "string",
          "title": "url of the ID back image"
        },
        "portraitImage": {
          "type": "string",
          "title": "url of the portrait image"
        }
      }
    },
    "merchantAddBusinessContactPersonRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "email of the contact person"
        },
        "firstName": {
          "type": "string",
          "title": "first name of the contact person"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the contact person"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the contact person"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition",
          "title": "position of the director"
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName",
        "mobileNumber",
        "position"
      ]
    },
    "merchantAddBusinessDocumentRequest": {
      "type": "object",
      "properties": {
        "docImage": {
          "type": "string",
          "format": "byte"
        },
        "name": {
          "type": "string",
          "title": "a short description of what the image is about (e.g. business certificate)"
        }
      },
      "required": [
        "docImage"
      ]
    },
    "merchantAddDirectorShareholderRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "first name of the director"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the director"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the director"
        },
        "email": {
          "type": "string",
          "title": "email of the director"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition",
          "title": "position of the director"
        },
        "idInfo": {
          "$ref": "#/definitions/merchantDirectorShareholderIDInfo",
          "title": "ID information of the director"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "mobileNumber",
        "email",
        "position",
        "idInfo"
      ]
    },
    "merchantBusinessContactInfoResponse": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "title": "city or town"
        },
        "provinceState": {
          "type": "string",
          "title": "province or state or region"
        },
        "digitalAddress": {
          "type": "string",
          "title": "digital address"
        },
        "postalAddress": {
          "type": "string",
          "title": "postal address"
        },
        "postalZipCode": {
          "type": "string",
          "title": "postal or zip code"
        },
        "firstOccupancyDate": {
          "type": "string",
          "title": "first occupancy date (YYYY-MM-DD)"
        },
        "officeOwnership": {
          "$ref": "#/definitions/merchantOfficeOwnership",
          "title": "office ownership"
        },
        "mobileNumber": {
          "type": "string",
          "title": "office mobile number"
        },
        "email": {
          "type": "string",
          "title": "business email"
        },
        "streetAddress": {
          "type": "string",
          "title": "street address"
        }
      }
    },
    "merchantBusinessContactListResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/merchantBusinessContactPersonPayload"
          }
        }
      }
    },
    "merchantBusinessContactPersonPayload": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "first name of the contact person"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the contact person"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition",
          "title": "position of the person"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the contact person"
        },
        "email": {
          "type": "string",
          "title": "email of the contact person"
        },
        "contactId": {
          "type": "string",
          "title": "ID of the contact person"
        }
      }
    },
    "merchantBusinessDocumentListResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/merchantBusinessDocumentPayload"
          }
        }
      }
    },
    "merchantBusinessDocumentPayload": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "docId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "merchantBusinessInfoResponse": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "title": "name of the business"
        },
        "tradingName": {
          "type": "string",
          "title": "trading name of the business"
        },
        "dateOfIncorporation": {
          "type": "string",
          "title": "date of incorporation (YYYY-MM-DD)"
        },
        "companyRegistrationNumber": {
          "type": "string",
          "title": "business registration number"
        },
        "email": {
          "type": "string",
          "title": "business email"
        },
        "regulatorId": {
          "type": "string",
          "title": "ID of the regulator"
        },
        "companyRegistrationType": {
          "$ref": "#/definitions/merchantCompanyRegistrationType",
          "title": "type of company registration"
        },
        "licenseInfo": {
          "$ref": "#/definitions/merchantBusinessLicenseInfo",
          "title": "license information"
        },
        "taxIdentificationNumber": {
          "type": "string",
          "title": "tax identification number"
        },
        "vatNumber": {
          "type": "string",
          "title": "VAT number"
        },
        "profilePicture": {
          "type": "string",
          "title": "profile picture"
        },
        "industryId": {
          "type": "string",
          "title": "ID of business industry"
        },
        "industryName": {
          "type": "string",
          "title": "name of business industry"
        },
        "allowForEdit": {
          "type": "boolean",
          "title": "allow this business entity to be edit from client-side"
        }
      }
    },
    "merchantBusinessLicenseInfo": {
      "type": "object",
      "properties": {
        "licenseNumber": {
          "type": "string",
          "title": "license number"
        },
        "issuedDate": {
          "type": "string",
          "title": "date of issue (YYYY-MM-DD)"
        },
        "expiryDate": {
          "type": "string",
          "title": "date of expiry (YYYY-MM-DD)"
        }
      }
    },
    "merchantCompanyRegistrationType": {
      "type": "string",
      "enum": [
        "COMPANY_REGISTRATION_TYPE_UNKNOWN",
        "COMPANY_REGISTRATION_TYPE_BUSINESS",
        "COMPANY_REGISTRATION_TYPE_PERSONAL",
        "COMPANY_REGISTRATION_TYPE_Limited_Liability"
      ],
      "default": "COMPANY_REGISTRATION_TYPE_UNKNOWN"
    },
    "merchantCustomerIDTypes": {
      "type": "string",
      "enum": [
        "CUSTOMER_ID_TYPES_UNKNOWN",
        "CUSTOMER_ID_TYPES_PASSPORT",
        "CUSTOMER_ID_TYPES_DRIVERS_LICENSE",
        "CUSTOMER_ID_TYPES_ID",
        "CUSTOMER_ID_TYPES_BANKID"
      ],
      "default": "CUSTOMER_ID_TYPES_UNKNOWN"
    },
    "merchantDirectorOrShareholderOrOtherType": {
      "type": "string",
      "enum": [
        "DIRECTOR_OR_SHAREHOLDER_OR_OTHER_TYPE_UNKNOWN",
        "DIRECTOR_OR_SHAREHOLDER_OR_OTHER_TYPE_CONTACT_PERSON",
        "DIRECTOR_OR_SHAREHOLDER_OR_OTHER_TYPE_DIRECTOR_SHAREHOLDER"
      ],
      "default": "DIRECTOR_OR_SHAREHOLDER_OR_OTHER_TYPE_UNKNOWN"
    },
    "merchantDirectorPosition": {
      "type": "string",
      "enum": [
        "DIRECTOR_POSITION_UNKNOWN",
        "DIRECTOR_POSITION_DIRECTOR",
        "DIRECTOR_POSITION_SHAREHOLDER",
        "DIRECTOR_POSITION_CEO",
        "DIRECTOR_POSITION_MANAGEMENT",
        "DIRECTOR_POSITION_ENGINEER",
        "DIRECTOR_POSITION_MID",
        "DIRECTOR_POSITION_CONTACT",
        "DIRECTOR_POSITION_SIGNATORY",
        "DIRECTOR_POSITION_GENERAL_MANAGER",
        "DIRECTOR_POSITION_DIRECTOR_SHAREHOLDER",
        "DIRECTOR_POSITION_SALES_MANAGER"
      ],
      "default": "DIRECTOR_POSITION_UNKNOWN"
    },
    "merchantDirectorShareholderIDInfo": {
      "type": "object",
      "properties": {
        "idNumber": {
          "type": "string",
          "title": "ID number"
        },
        "idExpiryDate": {
          "type": "string",
          "title": "ID expiry date (YYYY-MM-DD)"
        },
        "placeOfIssue": {
          "type": "string",
          "title": "place of issue"
        },
        "idType": {
          "$ref": "#/definitions/merchantCustomerIDTypes",
          "title": "type of ID"
        },
        "idFrontImage": {
          "type": "string",
          "format": "byte",
          "title": "bytes/bas64 string of the ID front image"
        },
        "idBackImage": {
          "type": "string",
          "format": "byte",
          "title": "bytes/bas64 string of the ID back image"
        },
        "portraitImage": {
          "type": "string",
          "format": "byte",
          "title": "bytes/bas64 string of the portrait image"
        }
      },
      "required": [
        "idNumber",
        "idExpiryDate",
        "placeOfIssue",
        "idType",
        "idFrontImage",
        "portraitImage"
      ]
    },
    "merchantDirectorShareholderListResponse": {
      "type": "object",
      "properties": {
        "directorsShareholders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/merchantDirectorShareholderPayload"
          }
        }
      }
    },
    "merchantDirectorShareholderPayload": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "first name of the director"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the director"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the director"
        },
        "email": {
          "type": "string",
          "title": "email of the director"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition",
          "title": "position of the director"
        },
        "directorShareholderType": {
          "$ref": "#/definitions/merchantDirectorOrShareholderOrOtherType",
          "title": "type of director"
        },
        "idInfo": {
          "$ref": "#/definitions/DirectorShareholderPayloadDirectorShareholderIDInfoPayload",
          "title": "ID information of the director"
        },
        "directorId": {
          "type": "string",
          "title": "ID of the director"
        },
        "passedAmlCheck": {
          "type": "boolean",
          "title": "passed AML check"
        }
      }
    },
    "merchantMerchantStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The string value."
        }
      },
      "description": "The JSON representation for `StringValue` is JSON string."
    },
    "merchantOfficeOwnership": {
      "type": "string",
      "enum": [
        "OFFICE_OWNERSHIP_UNKNOWN",
        "OFFICE_OWNERSHIP_OWNED",
        "OFFICE_OWNERSHIP_RENT",
        "OFFICE_OWNERSHIP_LEASED"
      ],
      "default": "OFFICE_OWNERSHIP_UNKNOWN"
    },
    "merchantUpdateBusinessContactInfoRequest": {
      "type": "object",
      "properties": {
        "postalZipCode": {
          "type": "string",
          "title": "postal or zip code"
        },
        "streetAddress": {
          "type": "string",
          "title": "street address"
        },
        "city": {
          "type": "string",
          "title": "city or town"
        },
        "provinceState": {
          "type": "string",
          "title": "province or state or region"
        },
        "digitalAddress": {
          "type": "string",
          "title": "digital address"
        },
        "firstOccupancyDate": {
          "type": "string",
          "title": "first occupancy date (YYYY-MM-DD)"
        },
        "officeOwnership": {
          "$ref": "#/definitions/merchantOfficeOwnership"
        },
        "postalAddress": {
          "type": "string",
          "title": "postal address"
        },
        "officeMobileNumber": {
          "type": "string",
          "title": "office mobile number"
        }
      },
      "required": [
        "digitalAddress",
        "firstOccupancyDate",
        "officeOwnership",
        "postalAddress",
        "officeMobileNumber"
      ]
    },
    "merchantUpdateBusinessContactPersonRequest": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition"
        },
        "mobileNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "required": [
        "contactId",
        "firstName",
        "lastName",
        "position",
        "mobileNumber",
        "email"
      ]
    },
    "merchantUpdateBusinessDocumentRequest": {
      "type": "object",
      "properties": {
        "docId": {
          "type": "integer",
          "format": "int32"
        },
        "docImage": {
          "type": "string",
          "format": "byte"
        },
        "name": {
          "type": "string",
          "title": "a short description of what the image is about (e.g. business certificate)"
        }
      },
      "required": [
        "docImage"
      ]
    },
    "merchantUpdateBusinessInfoRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the business"
        },
        "tradingName": {
          "type": "string",
          "title": "trading name of the business"
        },
        "dateOfIncorporation": {
          "type": "string",
          "title": "date of incorporation (YYYY-MM-DD)"
        },
        "industryId": {
          "type": "string",
          "title": "ID of business industry"
        },
        "companyRegistrationNumber": {
          "type": "string",
          "title": "business registration number"
        },
        "email": {
          "type": "string",
          "title": "business email"
        },
        "regulatorId": {
          "type": "string",
          "title": "ID of the regulator"
        },
        "companyRegistrationType": {
          "$ref": "#/definitions/merchantCompanyRegistrationType",
          "title": "type of company registration"
        },
        "licenseInfo": {
          "$ref": "#/definitions/merchantBusinessLicenseInfo",
          "title": "license information"
        },
        "taxIdentificationNumber": {
          "type": "string",
          "title": "tax identification number"
        },
        "vatNumber": {
          "type": "string",
          "title": "VAT number"
        }
      },
      "required": [
        "name",
        "tradingName",
        "dateOfIncorporation",
        "companyRegistrationNumber",
        "email",
        "regulatorId",
        "companyRegistrationType",
        "licenseInfo",
        "taxIdentificationNumber",
        "vatNumber"
      ]
    },
    "merchantUpdateDirectorShareholderRequest": {
      "type": "object",
      "properties": {
        "directorId": {
          "type": "string",
          "title": "ID of the director"
        },
        "firstName": {
          "type": "string",
          "title": "first name of the director"
        },
        "lastName": {
          "type": "string",
          "title": "last name of the director"
        },
        "mobileNumber": {
          "type": "string",
          "title": "mobile number of the director"
        },
        "email": {
          "type": "string",
          "title": "email of the director"
        },
        "position": {
          "$ref": "#/definitions/merchantDirectorPosition",
          "title": "position of the director"
        },
        "idInfo": {
          "$ref": "#/definitions/merchantDirectorShareholderIDInfo",
          "title": "ID information of the director"
        }
      },
      "required": [
        "directorId",
        "firstName",
        "lastName",
        "mobileNumber",
        "email",
        "position",
        "idInfo"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
