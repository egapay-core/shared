// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: eganow/api/gateway/eganow_app/money_transfer_service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CoreEganowAppMoneyTransferGatewaySvc_GetAccountHolderName_FullMethodName = "/eganow.api.gateway.eganow_app.CoreEganowAppMoneyTransferGatewaySvc/GetAccountHolderName"
)

// CoreEganowAppMoneyTransferGatewaySvcClient is the client API for CoreEganowAppMoneyTransferGatewaySvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CoreEganowAppMoneyTransferGatewaySvcClient interface {
	GetAccountHolderName(ctx context.Context, in *EganowAppGatewayNameEnquiryRequest, opts ...grpc.CallOption) (*EganowAppGatewayNameEnquiryResponse, error)
}

type coreEganowAppMoneyTransferGatewaySvcClient struct {
	cc grpc.ClientConnInterface
}

func NewCoreEganowAppMoneyTransferGatewaySvcClient(cc grpc.ClientConnInterface) CoreEganowAppMoneyTransferGatewaySvcClient {
	return &coreEganowAppMoneyTransferGatewaySvcClient{cc}
}

func (c *coreEganowAppMoneyTransferGatewaySvcClient) GetAccountHolderName(ctx context.Context, in *EganowAppGatewayNameEnquiryRequest, opts ...grpc.CallOption) (*EganowAppGatewayNameEnquiryResponse, error) {
	out := new(EganowAppGatewayNameEnquiryResponse)
	err := c.cc.Invoke(ctx, CoreEganowAppMoneyTransferGatewaySvc_GetAccountHolderName_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreEganowAppMoneyTransferGatewaySvcServer is the server API for CoreEganowAppMoneyTransferGatewaySvc service.
// All implementations must embed UnimplementedCoreEganowAppMoneyTransferGatewaySvcServer
// for forward compatibility
type CoreEganowAppMoneyTransferGatewaySvcServer interface {
	GetAccountHolderName(context.Context, *EganowAppGatewayNameEnquiryRequest) (*EganowAppGatewayNameEnquiryResponse, error)
	mustEmbedUnimplementedCoreEganowAppMoneyTransferGatewaySvcServer()
}

// UnimplementedCoreEganowAppMoneyTransferGatewaySvcServer must be embedded to have forward compatible implementations.
type UnimplementedCoreEganowAppMoneyTransferGatewaySvcServer struct {
}

func (UnimplementedCoreEganowAppMoneyTransferGatewaySvcServer) GetAccountHolderName(context.Context, *EganowAppGatewayNameEnquiryRequest) (*EganowAppGatewayNameEnquiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountHolderName not implemented")
}
func (UnimplementedCoreEganowAppMoneyTransferGatewaySvcServer) mustEmbedUnimplementedCoreEganowAppMoneyTransferGatewaySvcServer() {
}

// UnsafeCoreEganowAppMoneyTransferGatewaySvcServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CoreEganowAppMoneyTransferGatewaySvcServer will
// result in compilation errors.
type UnsafeCoreEganowAppMoneyTransferGatewaySvcServer interface {
	mustEmbedUnimplementedCoreEganowAppMoneyTransferGatewaySvcServer()
}

func RegisterCoreEganowAppMoneyTransferGatewaySvcServer(s grpc.ServiceRegistrar, srv CoreEganowAppMoneyTransferGatewaySvcServer) {
	s.RegisterService(&CoreEganowAppMoneyTransferGatewaySvc_ServiceDesc, srv)
}

func _CoreEganowAppMoneyTransferGatewaySvc_GetAccountHolderName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EganowAppGatewayNameEnquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreEganowAppMoneyTransferGatewaySvcServer).GetAccountHolderName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CoreEganowAppMoneyTransferGatewaySvc_GetAccountHolderName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreEganowAppMoneyTransferGatewaySvcServer).GetAccountHolderName(ctx, req.(*EganowAppGatewayNameEnquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CoreEganowAppMoneyTransferGatewaySvc_ServiceDesc is the grpc.ServiceDesc for CoreEganowAppMoneyTransferGatewaySvc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CoreEganowAppMoneyTransferGatewaySvc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eganow.api.gateway.eganow_app.CoreEganowAppMoneyTransferGatewaySvc",
	HandlerType: (*CoreEganowAppMoneyTransferGatewaySvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountHolderName",
			Handler:    _CoreEganowAppMoneyTransferGatewaySvc_GetAccountHolderName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eganow/api/gateway/eganow_app/money_transfer_service.proto",
}
